import yara
import ssdeep_comparison as ss
import pe_csv as pcsv
import sys
import os

def process_file(filepath):
    print("Research and Development Project Malware Analysis Model", end="\n\n")
    filename = os.path.basename(filepath)
    print("Checking For {}".format(filename))
    print("\n\n")

    print("Step 1: Matching YARA Rules", end="\n\n")

    yara_rules_file = '/home/parallels/PycharmProjects/R_and_D_Project/src/yara_rules/yargen_rules.yar'

    pe_file = filepath
    rules = yara.compile(filepath=yara_rules_file)
    matches = rules.match(pe_file)

    for i in matches:
        print("Rule Matched: {}".format(i))

    if len(matches) > 0:
        print("PE file matches YARA rules. Stopping program.")
        print("Given PE File is a Malware")
    else:
        print("PE file does not match YARA rules.")
        print()
        print("Step 2: Checking For SSDEEP Hashes Now!", end="\n\n")

        result = ss.scan_file(pe_file)
        score = result['score']
        likelihood = result['likelihood']
        print("SSDEEP Score of File: ", end="")
        print(score)
        if likelihood == 0:
            print("The File is Less Likely To Be A Malware File")
            print("Classified as Benign. Stopping the Program")

        elif likelihood == 0.5:
            import brf_algo
            print("The File May or May Not be a Malware File")
            print()
            print("Step 3: Creating CSV File of the selected PE File", end="\n\n")
            csv_path = pcsv.start_func(pe_file)
            print()
            print("Step 4: Checking the file in Random Forest for Final Check", end="\n\n")
            brf_algo.run_brf(csv_path)

        elif likelihood == 1:
            print("The File is Most Likely To Be A Malware File")
            print("Classified as Malware. Stopping the Program")

filepath = sys.argv[1]
process_file(filepath)